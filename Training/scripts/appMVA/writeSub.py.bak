#!/usr/bin/env python3
import argparse
parser = argparse.ArgumentParser(description='generate condor configuration.')
parser.add_argument('-i', dest='inputCert', help='input certificate', type=str)
parser.add_argument('--exe', dest='userexe', help='executable', type=str)
parser.add_argument('--boost', dest='boost', help='pPb vs Pbp', type=str)
parser.add_argument('--dataset', dest='dataset', help='dataset, e.g. dataHM1, dataMB1', type=str)
#parser.add_argument('--triggerIndex', dest='triggerIndex', help='trigger index', type=int, default=2)
#parser.add_argument('--filterIndex', dest='filterIndex', help='filter index', type=int, default=4)
parser.add_argument('--site', dest='site', help='destination: lxplus (default) or fnal', type=str, default="lxplus")
args = parser.parse_args()
dest = ""
if args.site == "lxplus":
    dest = "root://eoscms.cern.ch//store/group/phys_heavyions/yousen/OpenHF2020Storage/AppMVA"
elif args.site == "fnal":
    dest = "root://cmseos.fnal.gov///store/user/yousen//RiceHIN/OpenHF2020_LamCKsP/AppMVA"


import os
import subprocess
import XRootD.client

mylists = None
#if args.triggerIndex == 2:
#  mylists = os.listdir('/eos/cms/store/group/phys_heavyions/yousen/OpenHF2020Storage/SplitFileListsV3/')
#elif args.triggerIndex == 4:
#  mylists = os.listdir('/eos/cms/store/group/phys_heavyions/yousen/OpenHF2020Storage/SplitFileListsV4/')
myclient = XRootD.client.FileSystem("root://eoscms.cern.ch")
mystat, mydir = myclient.dirlist("/store/group/phys_heavyions/yousen/OpenHF2020Storage/SplitFileListsV2/")

trigIndex = None
if "HM" in args.dataset:
    trigIndex = 2
    mylists = os.listdir('/eos/cms/store/group/phys_heavyions/yousen/OpenHF2020Storage/SplitFileListsV3/')
elif "MB" in args.dataset:
    trigIndex = 4
    mylists = os.listdir('/eos/cms/store/group/phys_heavyions/yousen/OpenHF2020Storage/SplitFileListsV4/')

logdir = "log_%s_%s_trig%d_filter%d" % (args.dataset, args.boost, trigIndex, args.filterIndex)
cmd='''
# this is config for submitting condor jobs
Proxy_filename = %s
Proxy_path = /afs/cern.ch/user/y/yousen/private/$(Proxy_filename)
Universe   = vanilla
Executable = %s
Log        = %s/$(Cluster)_$(Process).log
Output     = %s/$(Cluster)_$(Process).out
Error      = %s/$(Cluster)_$(Process).err
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
transfer_output_files = ""
#requirements = (OpSysAndVer =?= "CntOS7")
+JobFlavour = "workday"
#+MaxRunTime = 1800
#max_transfer_output_mb = 2000
''' % (args.inputCert, args.userexe, logdir, logdir ,logdir)

num = 0
for l in mylists:
    if args.boost == "pPb" and not "pPb" in l:
        continue
    if args.boost == "Pbp" and not "Pbp" in l:
        continue
    if not args.dataset in l:
        continue
    cmd += "#%d" % num
    cmd += '''
Arguments = $(Proxy_filename) %s %d %d %s
''' % (l, trigIndex, args.filterIndex, dest)
    cmd +='''transfer_input_files = $(Proxy_path),dataset
queue
'''
    num = num+1

#print (cmd)
with open("sub_%s_%s_trig%d_filter%d.jdl" % (args.dataset, args.boost, trigIndex, args.filterIndex), 'w') as f:
    f.write(cmd)
    f.close
subprocess.run(['mkdir', logdir])
subprocess.run(['condor_submit', f.name])
